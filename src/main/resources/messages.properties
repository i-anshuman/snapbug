# Exception Message
global.invalid.method.argument= The request contains validation errors.
global.invalid.credentials= Invalid username or password.

# Security Message
global.security.token= Unable to get authentication token.
global.security.filter= Can't set user authentication.
global.security.credential.invalid= Invalid username or password.
global.security.unauthorized= Unauthorized request.

# User Validation
validation.user.username= User must have a username.
validation.user.username.exists= Username is already in use.
validation.user.password= User must have a password.
validation.user.fullname= User must have a fullname.
validation.user.email= User must have an email.
validation.user.email.invalid= User must have a valid email.
validation.user.email.exists= Email is already in use.
validation.user.role= User must have a role.
validation.user.role.valid= User must have a valid role.

# Role Validation
validation.role.invalid= Role is not valid.

# Issue Validation
validation.issue.title= Issue must have a title.
validation.issue.description= Issue must have a description.
validation.issue.expectation= Issue must have an expected result.
validation.issue.module= Issue must belong to a module.
validation.issue.module.valid= Issue must belong to a valid module.
validation.issue.submodule= Issue must belong to a submodule.
validation.issue.submodule.valid= Issue must belong to a valid submodule.
validation.issue.screen= Issue must belong to a screen.
validation.issue.screen.valid= Issue must belong to a valid screen.
validation.issue.type= Issue must have a type.
validation.issue.type.valid= Issue must have a valid type.
validation.issue.severity= Issue must have a severity.
validation.issue.severity.valid= Issue must have a valid severity.

# Issue
issue.not.found= Issue not found.
